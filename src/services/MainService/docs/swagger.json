{
    "swagger": "2.0",
    "info": {
        "title": "Swagger Documentation for Golang web API(Gin framework)",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/admin/login": {
            "post": {
                "description": "login admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "login admin",
                "parameters": [
                    {
                        "description": "Login Admin",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.LoginAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.AdminLoginView"
                        }
                    }
                }
            }
        },
        "/admin/poster": {
            "post": {
                "description": "Creates a poster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create a poster",
                "parameters": [
                    {
                        "description": "Poster",
                        "name": "poster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.CreatePosterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.PosterView"
                        }
                    }
                }
            }
        },
        "/admin/poster/{id}": {
            "delete": {
                "description": "Deletes a poster by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete a poster by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Updates a poster by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update a poster by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Poster",
                        "name": "poster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.UpdatePosterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.PosterView"
                        }
                    }
                }
            }
        },
        "/admin/signup": {
            "post": {
                "description": "signup admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "signup admin",
                "parameters": [
                    {
                        "description": "Signup Admin",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.SignupAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.AdminView"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "post": {
                "description": "Create a User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create a User",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.UserViewID"
                        }
                    }
                }
            }
        },
        "/admin/user/{userid}": {
            "get": {
                "description": "Retrieves a User by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get a User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.UserViewID"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a User by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete a User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Updates a User by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update a User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.UserViewIDs"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "description": "Retrieves Users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get all Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/View.UserViewIDs"
                            }
                        }
                    }
                }
            }
        },
        "/api-call/generate-poster-Info": {
            "get": {
                "description": "Generates info for a poster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ApiCall"
                ],
                "summary": "Generate poster info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image Url",
                        "name": "image_url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.GeneratedPosterInfoView"
                        }
                    }
                }
            }
        },
        "/api-call/image-upload": {
            "post": {
                "description": "Upload image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ApiCall"
                ],
                "summary": "Upload image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Multiple files",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/chat/authorize/conversation": {
            "get": {
                "description": "Get all user conversations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get all user conversations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/View.ConversationView"
                            }
                        }
                    }
                }
            }
        },
        "/chat/authorize/conversation/{conversation_id}": {
            "get": {
                "description": "Get conversation by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get conversation by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Update conversation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CreateConversation ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Image",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat/authorize/history/{conversation_id}/": {
            "get": {
                "description": "Get conversation history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get conversation history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CreateConversation ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Model.Conversation"
                            }
                        }
                    }
                }
            }
        },
        "/chat/authorize/message": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "SendMessage to join a chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "SendMessage",
                "parameters": [
                    {
                        "description": "Message",
                        "name": "Message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Api.MessageBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat/authorize/read": {
            "post": {
                "description": "Read Multiple Messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Read Multiple Messages",
                "parameters": [
                    {
                        "description": "MessageIDs",
                        "name": "MessageID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Api.MessageIDsBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat/open-ws": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "OpenWSConnection to join a chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "OpenWSConnection",
                "parameters": [
                    {
                        "description": "Message",
                        "name": "Message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.TransferMessage"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/posters": {
            "get": {
                "description": "Retrieves a list of all posters, sorted and paginated according to the given parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posters"
                ],
                "summary": "Get a list of all posters",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "desc",
                        "description": "Sort direction",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at",
                        "description": "Sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search phrase",
                        "name": "search_phrase",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "both",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Time start",
                        "name": "time_start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Time end",
                        "name": "time_end",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Only Awards",
                        "name": "only_awards",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Latitude",
                        "name": "lat",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Longitude",
                        "name": "lon",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "TagIds",
                        "name": "tag_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "all",
                        "description": "State",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "all",
                        "description": "Special_type",
                        "name": "special_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/View.AllPostersView"
                            }
                        }
                    }
                }
            }
        },
        "/posters/authorize": {
            "post": {
                "description": "Creates a poster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posters"
                ],
                "summary": "Create a poster",
                "parameters": [
                    {
                        "description": "Poster",
                        "name": "poster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.CreatePosterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.PosterView"
                        }
                    }
                }
            }
        },
        "/posters/authorize/{id}": {
            "delete": {
                "description": "Deletes a poster by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posters"
                ],
                "summary": "Delete a poster by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Updates a poster by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posters"
                ],
                "summary": "Update a poster by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Poster",
                        "name": "poster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.UpdatePosterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.PosterView"
                        }
                    }
                }
            }
        },
        "/posters/mock-data": {
            "post": {
                "description": "Create mock data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posters"
                ],
                "summary": "Create mock data",
                "parameters": [
                    {
                        "description": "Mock Data",
                        "name": "mock",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.CreateMockDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posters/state": {
            "patch": {
                "description": "Updates a poster report by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posters"
                ],
                "summary": "Update a poster state by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "accepted",
                        "description": "State",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posters/{id}": {
            "get": {
                "description": "Retrieves a poster by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posters"
                ],
                "summary": "Get a poster by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.PosterView"
                        }
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "description": "Retrieves a list of all poster reports, sorted and paginated according to the given parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Get a list of all poster reports",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "both",
                        "description": "Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/View.PosterReportView"
                            }
                        }
                    }
                }
            }
        },
        "/reports/report-poster": {
            "post": {
                "description": "Reports a poster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Report a poster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poster ID",
                        "name": "poster_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Issuer ID",
                        "name": "issuer_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "other",
                        "description": "Report Type",
                        "name": "report_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/reports/{id}": {
            "get": {
                "description": "Retrieves a poster report by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Get a poster report by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.PosterReportView"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a poster report by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Update a poster report by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Poster Report",
                        "name": "report",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.UpdatePosterReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.PosterView"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Retrieves Tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Get all Tags",
                "parameters": [
                    {
                        "type": "string",
                        "default": "all",
                        "description": "State",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/View.TagView"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a Tag by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Create a Tag by ID",
                "parameters": [
                    {
                        "description": "Tag",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.CreateTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.TagView"
                        }
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "description": "Retrieves a Tag by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Get a Tag by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.TagView"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a Tag by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Delete a Tag by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Updates a Tag by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Update a Tag by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.UpdateTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.TagView"
                        }
                    }
                }
            }
        },
        "/users/auth/google/callback": {
            "get": {
                "description": "google callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "google callback",
                "responses": {}
            }
        },
        "/users/auth/google/login": {
            "get": {
                "description": "login user with oauth2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "login user with oauth2",
                "responses": {}
            }
        },
        "/users/auth/otp/login": {
            "post": {
                "description": "login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "login user",
                "parameters": [
                    {
                        "description": "Verify OTP",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.VerifyOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.UserView"
                        }
                    }
                }
            }
        },
        "/users/auth/otp/send": {
            "post": {
                "description": "send otp to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "send otp to user",
                "parameters": [
                    {
                        "description": "Send OTP",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.SendOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.MessageView"
                        }
                    }
                }
            }
        },
        "/users/authorize": {
            "get": {
                "description": "Retrieves a User by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.UserViewID"
                        }
                    }
                }
            }
        },
        "/users/authorize/": {
            "delete": {
                "description": "Deletes a User by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Updates a User by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UseCase.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.UserViewIDs"
                        }
                    }
                }
            }
        },
        "/users/authorize/payment/user_wallet": {
            "get": {
                "description": "Payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "URL",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Amount",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/authorize/payment/user_wallet/transactions": {
            "get": {
                "description": "Get Transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get Transactions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/View.UserViewPayments"
                        }
                    }
                }
            }
        },
        "/users/authorize/payment/user_wallet/verify": {
            "get": {
                "description": "Payment Verify",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Payment Verify",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Track ID",
                        "name": "track_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "Api.MessageBody": {
            "type": "object",
            "required": [
                "content",
                "conversation_id",
                "poster_id",
                "receiver_id",
                "sender_id",
                "type"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "conversation_id": {
                    "type": "integer"
                },
                "poster_id": {
                    "type": "integer"
                },
                "receiver_id": {
                    "type": "integer"
                },
                "sender_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "Api.MessageIDsBody": {
            "type": "object",
            "required": [
                "message_ids",
                "sender_id"
            ],
            "properties": {
                "message_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sender_id": {
                    "type": "integer"
                }
            }
        },
        "Model.Address": {
            "type": "object",
            "properties": {
                "address_detail": {
                    "type": "string"
                },
                "address_id": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "province": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Model.Conversation": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "member_id": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Message"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer"
                },
                "poster_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Model.Image": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "poster_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "Model.MarkedPoster": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "poster": {
                    "$ref": "#/definitions/Model.Poster"
                },
                "poster_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "Model.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "conversation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "is_send": {
                    "type": "boolean"
                },
                "receiver_id": {
                    "type": "integer"
                },
                "sender_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Model.Payment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "track_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "Model.Poster": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Address"
                    }
                },
                "award": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description;": {
                    "type": "string"
                },
                "has_alert": {
                    "type": "boolean"
                },
                "has_chat": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Image"
                    }
                },
                "special_type": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/Model.PosterStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Tag"
                    }
                },
                "telegram_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_phone": {
                    "type": "string"
                }
            }
        },
        "Model.PosterStatus": {
            "type": "string",
            "enum": [
                "lost",
                "found"
            ],
            "x-enum-varnames": [
                "Lost",
                "Found"
            ]
        },
        "Model.Tag": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "posters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Poster"
                    }
                },
                "state": {
                    "description": "one of [rejected, accepted, pending]",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Model.User": {
            "type": "object",
            "properties": {
                "Payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Payment"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "marked_posters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.MarkedPoster"
                    }
                },
                "member_conversations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Conversation"
                    }
                },
                "own_conversations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Conversation"
                    }
                },
                "posters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Poster"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "wallet": {
                    "type": "number"
                }
            }
        },
        "UseCase.CreateMockDataRequest": {
            "type": "object",
            "required": [
                "count",
                "tag_names",
                "user_id"
            ],
            "properties": {
                "count": {
                    "type": "integer"
                },
                "tag_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "UseCase.CreatePosterRequest": {
            "type": "object",
            "required": [
                "img_urls",
                "tags"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.CreateAddressDTO"
                    }
                },
                "img_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "poster": {
                    "$ref": "#/definitions/dtos.CreatePosterDTO"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UseCase.CreateTagRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                }
            }
        },
        "UseCase.CreateUserRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 11
                }
            }
        },
        "UseCase.LoginAdminRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "UseCase.SendOTPRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 11
                }
            }
        },
        "UseCase.SignupAdminRequest": {
            "type": "object",
            "required": [
                "email",
                "f_name",
                "l_name",
                "password",
                "phone",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 8
                },
                "f_name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 4
                },
                "l_name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 4
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 11
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 5
                }
            }
        },
        "UseCase.UpdatePosterReportRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "issuer_id": {
                    "type": "integer"
                },
                "poster_id": {
                    "type": "integer"
                },
                "report_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "UseCase.UpdatePosterRequest": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.UpdateAddressDTO"
                    }
                },
                "poster": {
                    "$ref": "#/definitions/dtos.UpdatePosterDTO"
                }
            }
        },
        "UseCase.UpdateTagRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 30
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "accepted",
                        "rejected",
                        "pending",
                        ""
                    ]
                }
            }
        },
        "UseCase.UpdateUserRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 11
                }
            }
        },
        "UseCase.UserInfo": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 5
                }
            }
        },
        "UseCase.VerifyOTPRequest": {
            "type": "object",
            "required": [
                "otp",
                "username"
            ],
            "properties": {
                "otp": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 11
                }
            }
        },
        "View.AdminLoginView": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "View.AdminView": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "f_name": {
                    "type": "string"
                },
                "l_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "View.AllPostersView": {
            "type": "object",
            "properties": {
                "max_page": {
                    "type": "integer"
                },
                "posters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ESPosterDTO"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "View.ConversationView": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "is_owner": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "poster_id": {
                    "type": "integer"
                }
            }
        },
        "View.GeneratedPosterInfoView": {
            "type": "object",
            "properties": {
                "colors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "titles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "View.MessageView": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "View.PosterReportView": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "issuer": {
                    "$ref": "#/definitions/Model.User"
                },
                "poster": {
                    "$ref": "#/definitions/Model.Poster"
                },
                "report_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "View.PosterView": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Address"
                    }
                },
                "award": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Image"
                    }
                },
                "special_type": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/Model.PosterStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Tag"
                    }
                },
                "telegram_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_phone": {
                    "type": "string"
                }
            }
        },
        "View.TagView": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "View.UserView": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "View.UserViewID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "marked_posters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.MarkedPoster"
                    }
                },
                "posters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Poster"
                    }
                },
                "username": {
                    "type": "string"
                },
                "wallet": {
                    "type": "number"
                }
            }
        },
        "View.UserViewIDs": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "marked_posters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.MarkedPoster"
                    }
                },
                "posters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Model.Poster"
                    }
                },
                "username": {
                    "type": "string"
                },
                "wallet": {
                    "type": "number"
                }
            }
        },
        "View.UserViewPayments": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.CreateAddressDTO": {
            "type": "object",
            "required": [
                "city",
                "latitude",
                "longitude",
                "province"
            ],
            "properties": {
                "address_detail": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 5
                },
                "city": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 5
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "province": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 5
                }
            }
        },
        "dtos.CreatePosterDTO": {
            "type": "object",
            "required": [
                "alert",
                "chat",
                "status",
                "title"
            ],
            "properties": {
                "alert": {
                    "type": "boolean"
                },
                "award": {
                    "type": "number"
                },
                "chat": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "special_type": {
                    "type": "string",
                    "enum": [
                        "normal",
                        "premium"
                    ]
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "lost",
                        "found"
                    ]
                },
                "tel_id": {
                    "type": "string",
                    "maxLength": 255
                },
                "title": {
                    "type": "string",
                    "maxLength": 255
                },
                "user_phone": {
                    "type": "string",
                    "maxLength": 13
                }
            }
        },
        "dtos.ESAddressDTO": {
            "type": "object",
            "properties": {
                "address_detail": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/dtos.Location"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "dtos.ESPosterDTO": {
            "type": "object",
            "required": [
                "alert",
                "chat",
                "user_id"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ESAddressDTO"
                    }
                },
                "alert": {
                    "type": "boolean"
                },
                "award": {
                    "type": "number"
                },
                "chat": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "special_type": {
                    "type": "string",
                    "enum": [
                        "normal",
                        "premium"
                    ]
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ESTagDTO"
                    }
                },
                "tel_id": {
                    "type": "string",
                    "maxLength": 255
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "user_phone": {
                    "type": "string",
                    "maxLength": 13,
                    "minLength": 11
                }
            }
        },
        "dtos.ESTagDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "accepted",
                        "rejected",
                        "pending"
                    ]
                }
            }
        },
        "dtos.Location": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                }
            }
        },
        "dtos.TransferMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "conversation_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateAddressDTO": {
            "type": "object",
            "properties": {
                "address_detail": {
                    "type": "string",
                    "maxLength": 1000
                },
                "city": {
                    "type": "string",
                    "maxLength": 255
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "province": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "dtos.UpdatePosterDTO": {
            "type": "object",
            "properties": {
                "alert": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false",
                        ""
                    ]
                },
                "award": {
                    "description": "todo if you want to update reward to 0, set it to -1",
                    "type": "number"
                },
                "chat": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false",
                        ""
                    ]
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "img_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "special_ads": {
                    "type": "string",
                    "enum": [
                        "normal",
                        "premium",
                        ""
                    ]
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "accepted",
                        "rejected",
                        ""
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "lost",
                        "found",
                        ""
                    ]
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tel_id": {
                    "type": "string",
                    "maxLength": 255
                },
                "title": {
                    "type": "string",
                    "maxLength": 255
                },
                "user_id": {
                    "type": "integer"
                },
                "user_phone": {
                    "type": "string",
                    "maxLength": 13
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        }
    }
}